// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static String buffer;
    static int bufLen;

    /** Initializes the keyboard. */
    function void init() {
    
        let bufLen = 80;
        let buffer = String.new(bufLen);
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var int key, c;
    
        let key = 0;

        while (key = 0) {
            let key = Keyboard.keyPressed();
        }

        let c = key;

        while (~(key = 0)) {
            let key = Keyboard.keyPressed();
        }
    
        do Output.printChar(c);
    
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String temp;
        var int c, i;
        

        do Output.printString(message);
        do buffer.dispose();
        let buffer = String.new(bufLen);
        

        while(true) {
            let c = Keyboard.readChar();

            let i = 0;
            if (buffer.length() = bufLen) {
                let temp = String.new((buffer.length() + bufLen));
                let bufLen = 2*bufLen;
                while(i < buffer.length()) {
                    let temp = temp.appendChar(buffer.charAt(i));   
                    let i = i + 1;
                }
                do buffer.dispose();
                let buffer = temp;
            }

            if(c = 128) {
                do Output.println();
                return buffer;
            } else {
                if (c = 129) {
                    do buffer.eraseLastChar();
                } else {
                    let buffer = buffer.appendChar(c);
                }

            }
        }
        
        return buffer;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String temp;
        var int c, i, val;
        var boolean neg;
        
        let val = 0;
        let neg = false;

        do Output.printString(message);

        while(true) {
            let c = Keyboard.readChar();


            if(c = 128) {
                do Output.println();
                if(neg) {
                    return -val;
                } else {
                    return val;
                }
            } else {
                if (c = 129) {
                    let val = (val/10);
                } else {
                    if((c = 45) | ((c>47) & (c<58))){
                        if (c = 45) {
                            let neg = true; 
                        } else {
                            let val = ((val*10) + (c - 48));
                        }
    
                    } else {
                        if(neg) {
                            return -val;
                        } else {
                            return val;
                        }
                    }
                }

            }
        }
        
        if(neg) {
            return -val;
        } else {
            return val;
        }
    }
}
