// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=reset, out=notres);
    Not(in=load, out=notload);
    Not(in=inc, out=notinc);
    And(a=notres, b=notload, out=sel0);
    Or(a=load, b=notinc, out=m1);
    And(a=notres, b=m1, out=sel1);
    Inc16(in=out1, out=inc1);
    Mux4Way16(a=false, b=in, c=inc1, d=out1, sel[0]=sel1, sel[1]=sel0, out=r1);
    Nand(a=sel0, b=sel1, out=n1);   
    Register(in=r1, load=n1, out=out1);
    And16(a=out1, b=true, out=out);
}
