// Init code
@256
D=A
@SP
M=D

// call Sys.init 0
@retAddrLabel0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@5
D=A
@addr
M=D
@SP
D=M
@addr
M=D-M
@0
D=A
@addr
M=M-D
D=M
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(retAddrLabel0)

// function Class1.set 0
(Class1.set)
@0
D=A
@i
M=D
(FUNC.LOOP0)
@i
D=M
@FUNC.STOP0
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@i
M=M-1
@FUNC.LOOP0
0;JMP
(FUNC.STOP0)

// push argument 0
@0
D=A
@addr
M=D
@ARG
D=M
@addr
M=M+D
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1

// pop static 0
@SP
M=M-1
A=M
D=M
@None.0
M=D

// push argument 1
@1
D=A
@addr
M=D
@ARG
D=M
@addr
M=M+D
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1

// pop static 1
@SP
M=M-1
A=M
D=M
@None.1
M=D

// push constant 0
@0
D=A 
@SP
A=M
M=D
@SP
M=M+1

// return
@LCL
D=M
@endFrame
M=D
@5
D=A
@addr
M=D 
@endFrame
D=M
@addr
M=D-M
A=M
D=M
@retAddr
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@endFrame
D=M
@addr
M=D-1
A=M
D=M
@THAT
M=D
@2
D=A
@addr
M=D 
@endFrame
D=M
@addr
M=D-M
A=M
D=M
@THIS
M=D
@3
D=A
@addr
M=D 
@endFrame
D=M
@addr
M=D-M
A=M
D=M
@ARG
M=D
@4
D=A
@addr
M=D 
@endFrame
D=M
@addr
M=D-M
A=M
D=M
@LCL
M=D
@retAddr
A=M
0;JMP

// function Class1.get 0
(Class1.get)
@0
D=A
@i
M=D
(FUNC.LOOP1)
@i
D=M
@FUNC.STOP1
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
@i
M=M-1
@FUNC.LOOP1
0;JMP
(FUNC.STOP1)

// push static 0
@None.0
D=M
@SP
A=M
M=D
@SP
M=M+1

// push static 1
@None.1
D=M
@SP
A=M
M=D
@SP
M=M+1

// sub
@SP
M=M-1
A=M
D=M
@SP
M=M-1
A=M
M=M-D
@SP
M=M+1

// return
@LCL
D=M
@endFrame
M=D
@5
D=A
@addr
M=D 
@endFrame
D=M
@addr
M=D-M
A=M
D=M
@retAddr
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
D=A+1
@SP
M=D
@endFrame
D=M
@addr
M=D-1
A=M
D=M
@THAT
M=D
@2
D=A
@addr
M=D 
@endFrame
D=M
@addr
M=D-M
A=M
D=M
@THIS
M=D
@3
D=A
@addr
M=D 
@endFrame
D=M
@addr
M=D-M
A=M
D=M
@ARG
M=D
@4
D=A
@addr
M=D 
@endFrame
D=M
@addr
M=D-M
A=M
D=M
@LCL
M=D
@retAddr
A=M
0;JMP

